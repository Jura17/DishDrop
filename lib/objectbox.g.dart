// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;

import 'data/models/cooking_direction.dart';
import 'data/models/list_item.dart';
import 'data/models/recipe.dart';
import 'data/models/shopping_list.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2190205047480943700),
      name: 'CookingDirection',
      lastPropertyId: const obx_int.IdUid(3, 980492167492147601),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3719811621675901932),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3979202709868519616),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 980492167492147601),
            name: 'recipeId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 7035789148379343922),
            relationTarget: 'Recipe')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3002361432043426961),
      name: 'ListItem',
      lastPropertyId: const obx_int.IdUid(8, 9152038999943788851),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6739255297084603572),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7717212713025709536),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4745959852002312378),
            name: 'amount',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9163234026841476207),
            name: 'unit',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3666353682194286152),
            name: 'isShoppingListItem',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 855689387494860640),
            name: 'isDone',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2205038186499789442),
            name: 'recipeId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 875165265614975457),
            relationTarget: 'Recipe'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9152038999943788851),
            name: 'shoppingListId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(3, 2686129353925817240),
            relationTarget: 'ShoppingList')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 5045249167998957265),
      name: 'Recipe',
      lastPropertyId: const obx_int.IdUid(12, 8725120823485462304),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1703286941209945594),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8889925339368430031),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8919117192241497382),
            name: 'category',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7840465691262891744),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5344171896337504129),
            name: 'notes',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8630063741576306041),
            name: 'difficulty',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1557316384655536750),
            name: 'tags',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3131658225316666820),
            name: 'prepTime',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1515690854452931695),
            name: 'cookingTime',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3617753777298233744),
            name: 'timesCooked',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5804423613136582290),
            name: 'isFavorite',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 8725120823485462304),
            name: 'imagesJson',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'directions', srcEntity: 'CookingDirection', srcField: ''),
        obx_int.ModelBacklink(
            name: 'ingredients', srcEntity: 'ListItem', srcField: '')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 7533033837798158227),
      name: 'ShoppingList',
      lastPropertyId: const obx_int.IdUid(6, 108732539867773916),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6587533261247469924),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7413146980146514660),
            name: 'isGeneralPurposeList',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5661293699342870787),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 73313408001890316),
            name: 'imgUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3245446223916046484),
            name: 'servings',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 108732539867773916),
            name: 'recipeId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(4, 6094375734331033477),
            relationTarget: 'Recipe')
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 3538138928397360569),
            name: 'shoppingItems',
            targetId: const obx_int.IdUid(2, 3002361432043426961))
      ],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
obx.Store openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) {
  return obx.Store(getObjectBoxModel(),
      directory: directory,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(4, 7533033837798158227),
      lastIndexId: const obx_int.IdUid(4, 6094375734331033477),
      lastRelationId: const obx_int.IdUid(1, 3538138928397360569),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    CookingDirection: obx_int.EntityDefinition<CookingDirection>(
        model: _entities[0],
        toOneRelations: (CookingDirection object) => [object.recipe],
        toManyRelations: (CookingDirection object) => {},
        getId: (CookingDirection object) => object.id,
        setId: (CookingDirection object, int id) {
          object.id = id;
        },
        objectToFB: (CookingDirection object, fb.Builder fbb) {
          final descriptionOffset = fbb.writeString(object.description);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, descriptionOffset);
          fbb.addInt64(2, object.recipe.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final object =
              CookingDirection(id: idParam, description: descriptionParam);
          object.recipe.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.recipe.attach(store);
          return object;
        }),
    ListItem: obx_int.EntityDefinition<ListItem>(
        model: _entities[1],
        toOneRelations: (ListItem object) =>
            [object.recipe, object.shoppingList],
        toManyRelations: (ListItem object) => {},
        getId: (ListItem object) => object.id,
        setId: (ListItem object, int id) {
          object.id = id;
        },
        objectToFB: (ListItem object, fb.Builder fbb) {
          final descriptionOffset = fbb.writeString(object.description);
          final unitOffset =
              object.unit == null ? null : fbb.writeString(object.unit!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, descriptionOffset);
          fbb.addFloat64(2, object.amount);
          fbb.addOffset(3, unitOffset);
          fbb.addBool(4, object.isShoppingListItem);
          fbb.addBool(5, object.isDone);
          fbb.addInt64(6, object.recipe.targetId);
          fbb.addInt64(7, object.shoppingList.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final amountParam =
              const fb.Float64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final unitParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final isShoppingListItemParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final isDoneParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final object = ListItem(
              id: idParam,
              description: descriptionParam,
              amount: amountParam,
              unit: unitParam,
              isShoppingListItem: isShoppingListItemParam,
              isDone: isDoneParam);
          object.recipe.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.recipe.attach(store);
          object.shoppingList.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          object.shoppingList.attach(store);
          return object;
        }),
    Recipe: obx_int.EntityDefinition<Recipe>(
        model: _entities[2],
        toOneRelations: (Recipe object) => [],
        toManyRelations: (Recipe object) => {
              obx_int.RelInfo<CookingDirection>.toOneBacklink(3, object.id,
                      (CookingDirection srcObject) => srcObject.recipe):
                  object.directions,
              obx_int.RelInfo<ListItem>.toOneBacklink(
                      7, object.id, (ListItem srcObject) => srcObject.recipe):
                  object.ingredients
            },
        getId: (Recipe object) => object.id,
        setId: (Recipe object, int id) {
          object.id = id;
        },
        objectToFB: (Recipe object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final categoryOffset = fbb.writeString(object.category);
          final descriptionOffset = fbb.writeString(object.description);
          final notesOffset = fbb.writeString(object.notes);
          final difficultyOffset = fbb.writeString(object.difficulty);
          final tagsOffset = fbb.writeList(
              object.tags.map(fbb.writeString).toList(growable: false));
          final imagesJsonOffset = fbb.writeString(object.imagesJson);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, categoryOffset);
          fbb.addOffset(3, descriptionOffset);
          fbb.addOffset(4, notesOffset);
          fbb.addOffset(5, difficultyOffset);
          fbb.addOffset(6, tagsOffset);
          fbb.addInt64(7, object.prepTime);
          fbb.addInt64(8, object.cookingTime);
          fbb.addInt64(9, object.timesCooked);
          fbb.addBool(10, object.isFavorite);
          fbb.addOffset(11, imagesJsonOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final categoryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final notesParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final difficultyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final imagesJsonParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final tagsParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 16, []);
          final prepTimeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final cookingTimeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final object = Recipe(
              id: idParam,
              title: titleParam,
              category: categoryParam,
              description: descriptionParam,
              notes: notesParam,
              difficulty: difficultyParam,
              imagesJson: imagesJsonParam,
              tags: tagsParam,
              prepTime: prepTimeParam,
              cookingTime: cookingTimeParam)
            ..timesCooked =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0)
            ..isFavorite =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 24, false);
          obx_int.InternalToManyAccess.setRelInfo<Recipe>(
              object.directions,
              store,
              obx_int.RelInfo<CookingDirection>.toOneBacklink(3, object.id,
                  (CookingDirection srcObject) => srcObject.recipe));
          obx_int.InternalToManyAccess.setRelInfo<Recipe>(
              object.ingredients,
              store,
              obx_int.RelInfo<ListItem>.toOneBacklink(
                  7, object.id, (ListItem srcObject) => srcObject.recipe));
          return object;
        }),
    ShoppingList: obx_int.EntityDefinition<ShoppingList>(
        model: _entities[3],
        toOneRelations: (ShoppingList object) => [object.recipe],
        toManyRelations: (ShoppingList object) => {
              obx_int.RelInfo<ShoppingList>.toMany(1, object.id):
                  object.shoppingItems
            },
        getId: (ShoppingList object) => object.id,
        setId: (ShoppingList object, int id) {
          object.id = id;
        },
        objectToFB: (ShoppingList object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final imgUrlOffset = fbb.writeString(object.imgUrl);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.isGeneralPurposeList);
          fbb.addOffset(2, titleOffset);
          fbb.addOffset(3, imgUrlOffset);
          fbb.addInt64(4, object.servings);
          fbb.addInt64(5, object.recipe.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final isGeneralPurposeListParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final imgUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final servingsParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final object = ShoppingList(
              id: idParam,
              isGeneralPurposeList: isGeneralPurposeListParam,
              title: titleParam,
              imgUrl: imgUrlParam,
              servings: servingsParam);
          object.recipe.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          object.recipe.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<ShoppingList>(
              object.shoppingItems,
              store,
              obx_int.RelInfo<ShoppingList>.toMany(1, object.id));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [CookingDirection] entity fields to define ObjectBox queries.
class CookingDirection_ {
  /// See [CookingDirection.id].
  static final id =
      obx.QueryIntegerProperty<CookingDirection>(_entities[0].properties[0]);

  /// See [CookingDirection.description].
  static final description =
      obx.QueryStringProperty<CookingDirection>(_entities[0].properties[1]);

  /// See [CookingDirection.recipe].
  static final recipe = obx.QueryRelationToOne<CookingDirection, Recipe>(
      _entities[0].properties[2]);
}

/// [ListItem] entity fields to define ObjectBox queries.
class ListItem_ {
  /// See [ListItem.id].
  static final id =
      obx.QueryIntegerProperty<ListItem>(_entities[1].properties[0]);

  /// See [ListItem.description].
  static final description =
      obx.QueryStringProperty<ListItem>(_entities[1].properties[1]);

  /// See [ListItem.amount].
  static final amount =
      obx.QueryDoubleProperty<ListItem>(_entities[1].properties[2]);

  /// See [ListItem.unit].
  static final unit =
      obx.QueryStringProperty<ListItem>(_entities[1].properties[3]);

  /// See [ListItem.isShoppingListItem].
  static final isShoppingListItem =
      obx.QueryBooleanProperty<ListItem>(_entities[1].properties[4]);

  /// See [ListItem.isDone].
  static final isDone =
      obx.QueryBooleanProperty<ListItem>(_entities[1].properties[5]);

  /// See [ListItem.recipe].
  static final recipe =
      obx.QueryRelationToOne<ListItem, Recipe>(_entities[1].properties[6]);

  /// See [ListItem.shoppingList].
  static final shoppingList = obx.QueryRelationToOne<ListItem, ShoppingList>(
      _entities[1].properties[7]);
}

/// [Recipe] entity fields to define ObjectBox queries.
class Recipe_ {
  /// See [Recipe.id].
  static final id =
      obx.QueryIntegerProperty<Recipe>(_entities[2].properties[0]);

  /// See [Recipe.title].
  static final title =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[1]);

  /// See [Recipe.category].
  static final category =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[2]);

  /// See [Recipe.description].
  static final description =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[3]);

  /// See [Recipe.notes].
  static final notes =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[4]);

  /// See [Recipe.difficulty].
  static final difficulty =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[5]);

  /// See [Recipe.tags].
  static final tags =
      obx.QueryStringVectorProperty<Recipe>(_entities[2].properties[6]);

  /// See [Recipe.prepTime].
  static final prepTime =
      obx.QueryIntegerProperty<Recipe>(_entities[2].properties[7]);

  /// See [Recipe.cookingTime].
  static final cookingTime =
      obx.QueryIntegerProperty<Recipe>(_entities[2].properties[8]);

  /// See [Recipe.timesCooked].
  static final timesCooked =
      obx.QueryIntegerProperty<Recipe>(_entities[2].properties[9]);

  /// See [Recipe.isFavorite].
  static final isFavorite =
      obx.QueryBooleanProperty<Recipe>(_entities[2].properties[10]);

  /// See [Recipe.imagesJson].
  static final imagesJson =
      obx.QueryStringProperty<Recipe>(_entities[2].properties[11]);

  /// see [Recipe.directions]
  static final directions = obx.QueryBacklinkToMany<CookingDirection, Recipe>(
      CookingDirection_.recipe);

  /// see [Recipe.ingredients]
  static final ingredients =
      obx.QueryBacklinkToMany<ListItem, Recipe>(ListItem_.recipe);
}

/// [ShoppingList] entity fields to define ObjectBox queries.
class ShoppingList_ {
  /// See [ShoppingList.id].
  static final id =
      obx.QueryIntegerProperty<ShoppingList>(_entities[3].properties[0]);

  /// See [ShoppingList.isGeneralPurposeList].
  static final isGeneralPurposeList =
      obx.QueryBooleanProperty<ShoppingList>(_entities[3].properties[1]);

  /// See [ShoppingList.title].
  static final title =
      obx.QueryStringProperty<ShoppingList>(_entities[3].properties[2]);

  /// See [ShoppingList.imgUrl].
  static final imgUrl =
      obx.QueryStringProperty<ShoppingList>(_entities[3].properties[3]);

  /// See [ShoppingList.servings].
  static final servings =
      obx.QueryIntegerProperty<ShoppingList>(_entities[3].properties[4]);

  /// See [ShoppingList.recipe].
  static final recipe =
      obx.QueryRelationToOne<ShoppingList, Recipe>(_entities[3].properties[5]);

  /// see [ShoppingList.shoppingItems]
  static final shoppingItems = obx.QueryRelationToMany<ShoppingList, ListItem>(
      _entities[3].relations[0]);
}
